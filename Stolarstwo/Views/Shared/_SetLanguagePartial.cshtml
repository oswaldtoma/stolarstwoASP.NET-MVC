@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer _localizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = new List<SelectListItem>()
    {
        new SelectListItem() { Value = "pl-PL", Text = _localizer["Polish"].Value },
        new SelectListItem() { Value = "en-US", Text = _localizer["English"].Value }
    };

    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

<div title="@_localizer["Request culture provider:"] @requestCulture?.Provider?.GetType().Name" class="container" style="padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px">
    <form id="selectLanguage" asp-controller="Home"
          asp-action="SetLanguage" asp-route-returnUrl="@returnUrl"
          method="post" class="form-horizontal" role="form">
        <label asp-for="@requestCulture.RequestCulture.UICulture.Name">@_localizer["Language"]:</label>
        <select name="culture" onchange="this.form.submit();" asp-for="@requestCulture.RequestCulture.UICulture.Name" asp-items="cultureItems">
        </select>
    </form>
</div>  